#ifndef PARTICLE_H
#define PARTICLE_H
#include "constsandtypes.h"
#include "BObject_c.h"

class Particle : public BObject
{
private:
	std::string name_m;
	int* window_m; //change the type once you know how and have one defined
	int* pic_m; //change the type once you know how and have one defined
	double charge_m;
	double mass_m;
	dblArray3_t position_m;
	dblArray3_t velocity_m;
	double qOVERm_m;

	void updV(const dblArray3_t& b, double dt);

public:
	Particle(double charge, double mass, dblArray3_t& position, dblArray3_t& velocity, std::string name = "", int* window = nullptr, int* pic = nullptr)
		: charge_m{ charge }, mass_m{ mass }, position_m(position), velocity_m(velocity), name_m{ name }, window_m{ window }, pic_m{ pic }, qOVERm_m{ charge / mass } {}
	
	//access functions
	dblArray3_t getP() { return position_m; }
	dblArray3_t getV() { return velocity_m; }
	
	void updP(const dblArray3_t& B, double dt);
	dblArray3_t calcBatP(const dblArray3_t& P, int norder = 0); //Mag field generated by moving charged particle
	//dblArray3_t foRKvCrossB(const dblArray3_t& B, double dt); //Fourth Order Runge Kutta, to be added perhaps at a later date
};

#endif